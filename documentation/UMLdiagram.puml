@startuml
title Arbitrary Precision Arithmetic Library - UML Class Diagram
' Author: Aric Maji and Team

package arbitraryarithmetic {

    class AInteger {
        - int sign
        - String magnitude

        + AInteger()
        + AInteger(String value)
        + AInteger(AInteger integer)
        + static AInteger parse(String value)
        + AInteger add(AInteger other)
        + AInteger subtract(AInteger other)
        + AInteger multiply(AInteger other)
        + AInteger divide(AInteger other)
        + String toString()
        --
        # String removeLeadingZeros(String magnitude)
        # static int compareMagnitudes(String a, String b)
        # String addMagnitudes(String a, String b)
        # String subtractMagnitudes(String a, String b)
        # String multiplyMagnitudes(String a, String b)
        # String divideMagnitudes(String a, String b)
    }

    class AFloat {
        - int sign
        - String Value
        - int scale

        + AFloat()
        + AFloat(String value)
        + AFloat(AFloat other)
        + static AFloat parse(String value)
        + AFloat add(AFloat other)
        + AFloat subtract(AFloat other)
        + AFloat multiply(AFloat other)
        + AFloat divide(AFloat other)
        + String toString()
        --
        # String padToScale(String a, int currentScale, int targetScale)
    }

    AFloat ..> AInteger : uses
}

package MyInfArith {

    class MyInfArith {
        + static void main(String[] args)
    }

    MyInfArith ..> arbitraryarithmetic.AInteger : uses
    MyInfArith ..> arbitraryarithmetic.AFloat : uses
}
@enduml